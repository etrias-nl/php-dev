name: Docker Build

'on':
    push:
        tags: [ '*.*.*-*' ]
        branches: [ main ]
    pull_request:
        branches: [ main ]

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
    cancel-in-progress: true

env:
    DOCKER_IMAGE: etriasnl/dev-php-fpm

jobs:
    build:
        strategy:
            matrix:
                runner: [ ubuntu-latest, ubuntu-bizhost ]
        runs-on: ${{ matrix.runner }}
        steps:
            -
                uses: actions/checkout@v4.2.2
            -
                uses: docker/setup-buildx-action@v3.9.0
            -
                id: build
                uses: docker/build-push-action@v6.14.0
                with:
                    context: .
                    load: true
                    provenance: false
                    # https://docs.docker.com/build/ci/github-actions/cache/#github-cache
                    cache-from: type=gha,scope=build-${{ matrix.runner }}
                    cache-to: type=gha,scope=build-${{ matrix.runner }},mode=max
            -
                run: |
                    set -eux
                    docker run --rm '${{ steps.build.outputs.imageid }}' php -v
                    docker run --rm '${{ steps.build.outputs.imageid }}' php -m
                    docker run --rm '${{ steps.build.outputs.imageid }}' composer --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' composer --working-dir=/usr/local/etc/tools normalize --dry-run
                    docker run --rm '${{ steps.build.outputs.imageid }}' pt-online-schema-change --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' node --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' npm --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' phplint --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' php-cs-fixer --version --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' phpunit --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' psalm --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' rector --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' yamllint --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' s3cmd --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' shellcheck --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' dotenv-linter --version
                    docker run --rm '${{ steps.build.outputs.imageid }}' nats --version
            -
                uses: docker/login-action@v3.3.0
                with:
                    username: ${{ secrets.DOCKER_HUB_USERNAME }}
                    password: ${{ secrets.DOCKER_HUB_PASSWORD }}
                if: github.ref_type == 'tag'
            -
                id: meta
                uses: docker/metadata-action@v5.6.1
                with:
                    images: ${{ env.DOCKER_IMAGE }}
                    flavor: |
                        latest=false
                        suffix=-${{ matrix.runner }}
                if: github.ref_type == 'tag'
            -
                uses: docker/build-push-action@v6.14.0
                with:
                    context: .
                    push: true
                    provenance: false
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
                    # https://docs.docker.com/build/ci/github-actions/cache/#github-cache
                    cache-from: type=gha,scope=build-${{ matrix.runner }}
                    cache-to: type=gha,scope=build-${{ matrix.runner }},mode=max
                if: github.ref_type == 'tag'
    push:
        needs: [ build ]
        runs-on: ubuntu-latest
        if: github.ref_type == 'tag'
        steps:
            -
                uses: actions/checkout@v4.2.2
            -
                uses: docker/setup-buildx-action@v3.9.0
            -
                uses: docker/login-action@v3.3.0
                with:
                    username: ${{ secrets.DOCKER_HUB_USERNAME }}
                    password: ${{ secrets.DOCKER_HUB_PASSWORD }}
            -
                id: meta
                uses: docker/metadata-action@v5.6.1
                with:
                    images: ${{ env.DOCKER_IMAGE }}
                    flavor: |
                        latest=false
            -
                uses: Noelware/docker-manifest-action@0.4.3
                with:
                    inputs: ${{ steps.meta.outputs.tags }}
                    images: ${{ steps.meta.outputs.tags }}-ubuntu-latest,${{ steps.meta.outputs.tags }}-ubuntu-bizhost
                    push: true
